

[sprite]
ROM:0007A87E obj_update_sprite2:
ROM:0007A87E                 move.l  a0,d7
ROM:0007A880                 bne.w   loc_7A886       ; a0=11f222
  translation
ROM:0007A8A6                 movea.l d7,a0           ; a7=21f222 (11f222) when loaded, 0x100000 -> 0x200000

ROM:0007A974 loc_7A974:                              ; CODE XREF: obj_update_sprite2:loc_7A91C↑j
ROM:0007A974                 move.b  (a0)+,-(sp)
ROM:0007A976                 move.b  (a0)+,d7
ROM:0007A978                 eor.b   d7,d1
ROM:0007A97A                 swap    d1
ROM:0007A97C                 movea.w #$10,a3
ROM:0007A980                 move.w  d3,d1
ROM:0007A982                 ori.w   #$F00,d1        ; d1 = 7C10 0FFF
ROM:0007A986                 move.w  #$10,d2
ROM:0007A98A
ROM:0007A98A loc_7A98A:                              ; CODE XREF: obj_update_sprite2+6B4↓j
ROM:0007A98A                 moveq   #0,d4
ROM:0007A98C                 moveq   #0,d5
ROM:0007A98E                 move.l  (a0)+,d3        ; a0=21F224 (11F224), d3=10, x|y
ROM:0007A990                 move.b  (a0)+,d4        ; w = 1
ROM:0007A992                 move.b  (a0)+,d5        ; h = 3

  then
ROM:0007AF1E                 move.l  d1,(a1)+        ; 7C10 0FFF, a1 = 0x106664, temp ram for sprite, 7C10 = palette&flag
ROM:0007AF20                 move.l  d5,(a1)+        ; C003 6B06, 6B06 = position x + tile count, C003 = position y
ROM:0007AF22                 move.l  a0,(a1)+        ; 21f22a -> 107c3a, tiles address

  then
ROM:0007ECC8                 movea.l 8(a3),a4        ; tile list, 0026CAAC
...
ROM:0007ECD4                 move.w  6(a3),d4        ; d4 = tile count, 6B06 (& 0x3E)
...
ROM:0007ECEC                 move.w  (a3),d6         ; palette & flag, 7C10
...
ROM:0007FA84                 move.w  4(a3),d7        ; d7 = C003, position y
ROM:0007FA88                 move.l  d3,(a6)         ; d3 = 84c1 3402, position x, a6 = 3c0000
ROM:0007FA8A                 nop
ROM:0007FA8C                 move.l  d4,(a6)         ; d4 = 80c1 4fff, zoom?
ROM:0007FA8E                 nop
ROM:0007FA90                 move.l  d7,(a6)         ; d7=82c1 a801 = position y


[palette]
0x214000 = color data
0x200000 = palette page index
0x78FFC = palette total index

0x10921A = index list for loading
0x10C21A? = temp ram base, use dirty flag to sync to gfx
palette_load_sprite : load one palette for certain sprite/object and save index in object ram
palette_load_page : load a page of fixed palette

step:
ROM:0007905C                 lea     off_78FFC,a0
ROM:00079060                 jsr     palette_load_page
  then
ROM:0008F1C0                 lea     (off_7902E).l,a0
ROM:0008F1C6                 jsr     palette_load_page
  then
ROM:0009B512                 movea.l 4(a0),a0        ; = 53272
ROM:0009B516                 jsr     palette_load_page
  then
ROM:00086140                 move.l  a0,2(a1,d6.w)   ; palette load extra
  then
ROM:000BE1A6                 move.w  #$125,d0
ROM:000BE1AA                 move.b  #0,d1
ROM:000BE1AE                 jsr     palette_load_sprite ; d0=from
  then
ROM:0006FF92                 move.w  #$3BE,d0
ROM:0006FF96                 move.b  #0,d1
ROM:0006FF9A                 jsr     palette_load_sprite ; d0=from
  then
ROM:00092CD0                 move.w  $6C(a6),d0
ROM:00092CD4                 lea     unk_90E54,a0
ROM:00092CD8                 add.w   d0,d0
ROM:00092CDA                 move.w  (a0,d0.w),d0
ROM:00092CDE                 move.b  #1,d1
ROM:00092CE2                 jsr     palette_load_sprite ; d0=from
ROM:00092CE8                 move.w  $6C(a6),d0
ROM:00092CEC                 lea     unk_90E54,a0
ROM:00092CF0                 add.w   d0,d0
ROM:00092CF2                 move.w  (a0,d0.w),d0
ROM:00092CF6                 move.b  #1,d1
ROM:00092CFA                 jsr     palette_load_sprite ; d0=from
ROM:00092D00                 move.w  $6C(a6),d0
ROM:00092D04                 lea     unk_90E54,a0
ROM:00092D08                 add.w   d0,d0
ROM:00092D0A                 move.w  (a0,d0.w),d0
ROM:00092D0E                 move.b  #1,d1
ROM:00092D12                 jsr     palette_load_sprite ; d0=from
  then
ROM:00099B68                 move.w  #$7A,d0 ; 'z'
ROM:00099B6C                 move.b  #1,d1
ROM:00099B70                 jsr     palette_load_sprite ; d0=from
ROM:00099B76                 move.w  #$7C,d0 ; '|'
ROM:00099B7A                 move.b  #1,d1
ROM:00099B7E                 jsr     palette_load_sprite ; d0=from
ROM:00099B84                 move.w  #$7E,d0 ; '~'
ROM:00099B88                 move.b  #1,d1
ROM:00099B8C                 jsr     palette_load_sprite ; d0=from
ROM:00099B92                 move.w  #$80,d0
ROM:00099B96                 move.b  #1,d1
ROM:00099B9A                 jsr     palette_load_sprite ; d0=from
  then
ROM:00096054                 move.w  #$38D,d0
ROM:00096058                 move.b  #0,d1
ROM:0009605C                 jsr     palette_load_sprite ; d0=from
  then
ROM:00070386                 move.w  #$3AA,d0
ROM:0007038A                 move.b  #0,d1
ROM:0007038E                 jsr     palette_load_sprite ; d0=from
  then
ROM:00070104                 move.w  #$200,d0
ROM:00070108                 move.b  #0,d1
ROM:0007010C                 jsr     palette_load_sprite ; d0=from

ROM:00085E56 palette_load_page:
ROM:00085E5C                 move.w  (a0),d0

ROM:00085E6E                 lea     (unk_10921A).l,a1
ROM:00085E74                 adda.w  d0,a1

ROM:00085E7C                 move.w  2(a0),d1        ; page index



ROM:00085E9E                 lea     (off_200000).l,a2
ROM:00085EA4                 adda.l  d1,a2
ROM:00085EA6                 move.l  a2,2(a1)        ; write temp list to ram 10935A - 10995A

ROM:00084518                 move.b  $A(a2),d0       ; load from ram 10935A - 10995A
ROM:0008451C                 bsr.w   palette_load2

ROM:000809D6 palette_load:
ROM:000809D6                 lea     (unk_214000).l,a3
ROM:000809DC                 move.l  a4,d7
ROM:000809DE                 addq.w  #2,a4
ROM:000809E0                 addq.w  #2,a0
ROM:000809E2                 move.w  (a0)+,d0        ; a0 : index table


ROM:000845AE palette_write:
ROM:000845E2                 bclr    #7,(a0)         ; dirty flag, to flush to gfx